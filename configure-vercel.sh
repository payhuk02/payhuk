#!/bin/bash

# üöÄ Script de configuration automatique Vercel pour Payhuk
# Ce script configure automatiquement les variables d'environnement sur Vercel

echo "üöÄ Configuration automatique Vercel pour Payhuk"
echo "=============================================="

# V√©rifier si Vercel CLI est install√©
if ! command -v vercel &> /dev/null; then
    echo "‚ùå Vercel CLI n'est pas install√©"
    echo "üì¶ Installation: npm i -g vercel"
    echo "üîê Puis: vercel login"
    exit 1
fi

# V√©rifier si l'utilisateur est connect√©
if ! vercel whoami &> /dev/null; then
    echo "‚ùå Vous n'√™tes pas connect√© √† Vercel"
    echo "üîê Connexion: vercel login"
    exit 1
fi

echo "‚úÖ Vercel CLI configur√©"

# Variables d'environnement √† configurer
declare -A ENV_VARS=(
    ["VITE_SUPABASE_PROJECT_ID"]="hbdnzajbyjakdhuavrvb"
    ["VITE_SUPABASE_URL"]="https://hbdnzajbyjakdhuavrvb.supabase.co"
    ["VITE_SUPABASE_PUBLISHABLE_KEY"]="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhiZG56YWpieWpha2RodWF2cnZiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc1OTgyMzEsImV4cCI6MjA3MzE3NDIzMX0.myur8r50wIORQwfcCP4D1ZxlhKFxICdVqjUM80CgtnM"
    ["VITE_APP_ENV"]="production"
    ["VITE_APP_VERSION"]="1.0.0"
    ["VITE_APP_NAME"]="Payhuk"
    ["VITE_DEBUG_MODE"]="false"
)

echo ""
echo "üîß Configuration des variables d'environnement..."

# Fonction pour ajouter une variable d'environnement
add_env_var() {
    local key=$1
    local value=$2
    
    echo "üìù Ajout de $key..."
    
    # Ajouter la variable pour tous les environnements
    if vercel env add "$key" production preview development <<< "$value" 2>/dev/null; then
        echo "‚úÖ $key ajout√©e avec succ√®s"
    else
        echo "‚ö†Ô∏è $key pourrait d√©j√† exister ou erreur lors de l'ajout"
    fi
}

# Ajouter toutes les variables
for key in "${!ENV_VARS[@]}"; do
    add_env_var "$key" "${ENV_VARS[$key]}"
done

echo ""
echo "üîÑ Red√©ploiement de l'application..."

# Obtenir l'ID du dernier d√©ploiement
LAST_DEPLOYMENT=$(vercel ls --json | jq -r '.[0].uid' 2>/dev/null)

if [ "$LAST_DEPLOYMENT" != "null" ] && [ -n "$LAST_DEPLOYMENT" ]; then
    echo "üöÄ Red√©ploiement du d√©ploiement $LAST_DEPLOYMENT..."
    vercel redeploy "$LAST_DEPLOYMENT" --yes
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Red√©ploiement r√©ussi!"
        echo ""
        echo "üåê Votre application sera disponible dans quelques minutes sur:"
        vercel ls --json | jq -r '.[0].url' 2>/dev/null
    else
        echo "‚ùå Erreur lors du red√©ploiement"
    fi
else
    echo "‚ö†Ô∏è Impossible de trouver le dernier d√©ploiement"
    echo "üí° Vous pouvez red√©ployer manuellement depuis le dashboard Vercel"
fi

echo ""
echo "üìã R√©sum√© de la configuration:"
echo "==============================="
echo "‚úÖ Variables d'environnement configur√©es:"
for key in "${!ENV_VARS[@]}"; do
    echo "   - $key"
done

echo ""
echo "üéØ Prochaines √©tapes:"
echo "1. Attendez 2-3 minutes que le red√©ploiement se termine"
echo "2. Visitez votre URL Vercel"
echo "3. L'erreur 'supabaseUrl is required' devrait √™tre r√©solue"
echo "4. Utilisez le bouton 'üîç Diagnostic Env' pour v√©rifier la configuration"

echo ""
echo "üîç Pour v√©rifier manuellement:"
echo "vercel env ls"
echo "vercel ls"
