# üîß PATCH P2.1 - Am√©lioration de l'Accessibilit√© (WCAG)

## üéØ Probl√®me
L'application ne respecte pas les standards WCAG 2.1 AA, ce qui limite l'acc√®s aux utilisateurs avec des besoins sp√©cifiques.

## üìÅ Fichiers Affect√©s

### 1. `src/pages/Landing.tsx` - AJOUTER LES ALT TEXTS ET SKIP LINKS

```typescript
// Ajouter en haut du composant, apr√®s les imports :
import { Helmet } from 'react-helmet';

// Remplacer le d√©but du composant par :
const Landing = () => {
  return (
    <>
      <Helmet>
        <title>Payhuk - Plateforme e-commerce moderne</title>
        <meta name="description" content="Cr√©ez et g√©rez votre boutique en ligne avec Payhuk. Solution e-commerce compl√®te avec paiements, analytics et gestion des stocks." />
        <meta property="og:title" content="Payhuk - Plateforme e-commerce moderne" />
        <meta property="og:description" content="Cr√©ez et g√©rez votre boutique en ligne avec Payhuk. Solution e-commerce compl√®te avec paiements, analytics et gestion des stocks." />
        <meta property="og:image" content="/payhuk-logo.png" />
        <meta name="twitter:card" content="summary_large_image" />
      </Helmet>

      {/* Skip Link pour l'accessibilit√© */}
      <a 
        href="#main-content" 
        className="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-blue-600 text-white px-4 py-2 rounded z-50"
      >
        Aller au contenu principal
      </a>

      <div className="min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 dark:from-gray-900 dark:to-gray-800">
        {/* Header avec navigation accessible */}
        <header className="bg-white/80 dark:bg-gray-900/80 backdrop-blur-sm border-b border-gray-200 dark:border-gray-700">
          <nav className="container mx-auto px-4 py-4" role="navigation" aria-label="Navigation principale">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-2">
                <img 
                  src="/payhuk-logo.png" 
                  alt="Logo Payhuk - Plateforme e-commerce" 
                  className="h-8 w-8"
                />
                <span className="text-xl font-bold text-gray-900 dark:text-white">Payhuk</span>
              </div>
              
              <div className="hidden md:flex items-center space-x-6">
                <a 
                  href="#features" 
                  className="text-gray-600 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded"
                >
                  Fonctionnalit√©s
                </a>
                <a 
                  href="#pricing" 
                  className="text-gray-600 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded"
                >
                  Tarifs
                </a>
                <a 
                  href="#contact" 
                  className="text-gray-600 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded"
                >
                  Contact
                </a>
                <Button 
                  asChild
                  className="bg-blue-600 hover:bg-blue-700 text-white focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
                >
                  <Link to="/auth">Commencer</Link>
                </Button>
              </div>
            </div>
          </nav>
        </header>

        {/* Contenu principal avec ID pour le skip link */}
        <main id="main-content" className="container mx-auto px-4 py-16">
          {/* Hero Section */}
          <section className="text-center mb-16" aria-labelledby="hero-title">
            <h1 
              id="hero-title"
              className="text-4xl md:text-6xl font-bold text-gray-900 dark:text-white mb-6"
            >
              Cr√©ez votre boutique en ligne en{' '}
              <span className="text-blue-600 dark:text-blue-400">quelques clics</span>
            </h1>
            <p className="text-xl text-gray-600 dark:text-gray-300 mb-8 max-w-3xl mx-auto">
              Payhuk vous permet de cr√©er et g√©rer votre boutique e-commerce avec des outils professionnels. 
              Paiements s√©curis√©s, analytics avanc√©es et gestion des stocks inclus.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <Button 
                asChild
                size="lg"
                className="bg-blue-600 hover:bg-blue-700 text-white focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
              >
                <Link to="/auth">Commencer gratuitement</Link>
              </Button>
              <Button 
                asChild
                variant="outline"
                size="lg"
                className="focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
              >
                <Link to="#demo">Voir la d√©mo</Link>
              </Button>
            </div>
          </section>

          {/* Images avec alt texts appropri√©s */}
          <section className="mb-16" aria-labelledby="screenshots-title">
            <h2 id="screenshots-title" className="sr-only">Captures d'√©cran de l'application</h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              <div className="text-center">
                <img 
                  src="/testimonial-1.jpg" 
                  alt="Interface du tableau de bord Payhuk montrant les statistiques de vente et la gestion des produits" 
                  className="w-full h-64 object-cover rounded-lg shadow-lg mb-4"
                />
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                  Tableau de bord intuitif
                </h3>
                <p className="text-gray-600 dark:text-gray-300">
                  G√©rez vos ventes et produits avec une interface claire et moderne.
                </p>
              </div>
              
              <div className="text-center">
                <img 
                  src="/testimonial-2.jpg" 
                  alt="Page de cr√©ation de produit avec formulaire de saisie et aper√ßu en temps r√©el" 
                  className="w-full h-64 object-cover rounded-lg shadow-lg mb-4"
                />
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                  Cr√©ation de produits
                </h3>
                <p className="text-gray-600 dark:text-gray-300">
                  Ajoutez vos produits facilement avec des formulaires optimis√©s.
                </p>
              </div>
              
              <div className="text-center">
                <img 
                  src="/testimonial-3.jpg" 
                  alt="Analytics et rapports de performance avec graphiques et m√©triques de vente" 
                  className="w-full h-64 object-cover rounded-lg shadow-lg mb-4"
                />
                <h3 className="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                  Analytics avanc√©es
                </h3>
                <p className="text-gray-600 dark:text-gray-300">
                  Suivez vos performances avec des rapports d√©taill√©s.
                </p>
              </div>
            </div>
          </section>

          {/* Reste du composant... */}
        </main>
      </div>
    </>
  );
};
```

### 2. `src/components/products/ProductCard.tsx` - AM√âLIORER L'ACCESSIBILIT√â

```typescript
// Remplacer le composant ProductCard par :

interface ProductCardProps {
  product: Product;
  onEdit?: () => void;
  onDelete?: () => void;
  className?: string;
}

export const ProductCard: React.FC<ProductCardProps> = ({ 
  product, 
  onEdit, 
  onDelete, 
  className = "" 
}) => {
  return (
    <Card 
      className={`group hover:shadow-lg transition-all duration-300 h-full flex flex-col ${className}`}
      role="article"
      aria-labelledby={`product-title-${product.id}`}
      aria-describedby={`product-description-${product.id}`}
    >
      <CardContent className="p-4 flex-1 flex flex-col">
        {/* Image du produit avec description d√©taill√©e */}
        <div className="relative mb-4 overflow-hidden rounded-lg">
          <img
            src={product.image_url || '/placeholder.svg'}
            alt={`${product.name} - ${product.description || 'Produit sans description'}`}
            className="w-full h-48 sm:h-40 md:h-48 object-cover group-hover:scale-105 transition-transform duration-300"
            loading="lazy"
            onError={(e) => {
              e.target.src = '/placeholder.svg';
              e.target.alt = 'Image non disponible';
            }}
          />
          
          {/* Badge de statut avec aria-label */}
          <Badge 
            className={`absolute top-2 right-2 ${
              product.status === 'published' 
                ? 'bg-green-500' 
                : product.status === 'draft' 
                ? 'bg-yellow-500' 
                : 'bg-gray-500'
            }`}
            aria-label={`Statut du produit: ${product.status === 'published' ? 'Publi√©' : product.status === 'draft' ? 'Brouillon' : 'Archiv√©'}`}
          >
            {product.status === 'published' ? 'Publi√©' : 
             product.status === 'draft' ? 'Brouillon' : 'Archiv√©'}
          </Badge>
        </div>

        {/* Contenu du produit */}
        <div className="flex-1 flex flex-col">
          <h3 
            id={`product-title-${product.id}`}
            className="font-semibold text-lg mb-2 line-clamp-2 break-words"
          >
            {product.name}
          </h3>
          
          <p 
            id={`product-description-${product.id}`}
            className="text-muted-foreground text-sm mb-3 line-clamp-3 break-words"
          >
            {product.description || 'Aucune description disponible'}
          </p>

          {/* Prix et stock avec labels accessibles */}
          <div className="flex justify-between items-center mb-4">
            <div>
              <span className="sr-only">Prix: </span>
              <span className="text-lg font-bold text-primary" aria-label={`${product.price || 0} euros`}>
                {product.price ? `${product.price}‚Ç¨` : 'Prix non d√©fini'}
              </span>
            </div>
            <div>
              <span className="sr-only">Stock disponible: </span>
              <span className="text-sm text-muted-foreground" aria-label={`${product.stock || 0} unit√©s en stock`}>
                Stock: {product.stock || 0}
              </span>
            </div>
          </div>

          {/* Actions avec labels accessibles */}
          <div className="flex gap-2 mt-auto" role="group" aria-label="Actions du produit">
            <Button
              variant="outline"
              size="sm"
              onClick={onEdit}
              className="flex-1"
              aria-label={`Modifier le produit ${product.name}`}
            >
              <Edit className="w-4 h-4 mr-1" aria-hidden="true" />
              <span className="hidden sm:inline">Modifier</span>
            </Button>
            <Button
              variant="outline"
              size="sm"
              onClick={onDelete}
              className="flex-1 text-destructive hover:text-destructive"
              aria-label={`Supprimer le produit ${product.name}`}
            >
              <Trash2 className="w-4 h-4 mr-1" aria-hidden="true" />
              <span className="hidden sm:inline">Supprimer</span>
            </Button>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};
```

### 3. `src/components/ui/Button.tsx` - AM√âLIORER L'ACCESSIBILIT√â DES BOUTONS

```typescript
// Ajouter ces props au composant Button :

interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  variant?: 'default' | 'destructive' | 'outline' | 'secondary' | 'ghost' | 'link';
  size?: 'default' | 'sm' | 'lg' | 'icon';
  asChild?: boolean;
  loading?: boolean;
  'aria-describedby'?: string;
  'aria-expanded'?: boolean;
  'aria-pressed'?: boolean;
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant = 'default', size = 'default', asChild = false, loading = false, ...props }, ref) => {
    const Comp = asChild ? Slot : 'button';
    
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        disabled={props.disabled || loading}
        aria-disabled={props.disabled || loading}
        {...props}
      >
        {loading && (
          <>
            <Loader2 className="mr-2 h-4 w-4 animate-spin" aria-hidden="true" />
            <span className="sr-only">Chargement en cours</span>
          </>
        )}
        {props.children}
      </Comp>
    );
  }
);
```

### 4. `src/index.css` - AJOUTER LES STYLES D'ACCESSIBILIT√â

```css
/* Ajouter √† la fin du fichier */

/* ============================================
   STYLES D'ACCESSIBILIT√â WCAG 2.1 AA
   ============================================ */

/* Focus visible pour tous les √©l√©ments interactifs */
*:focus-visible {
  outline: 2px solid hsl(var(--primary));
  outline-offset: 2px;
  border-radius: 4px;
}

/* Supprimer le focus par d√©faut pour les √©l√©ments non-clavier */
*:focus:not(:focus-visible) {
  outline: none;
}

/* Am√©liorer le contraste des liens */
a:not(.button) {
  color: hsl(var(--primary));
  text-decoration: underline;
  text-underline-offset: 2px;
}

a:not(.button):hover {
  color: hsl(var(--primary) / 0.8);
  text-decoration-thickness: 2px;
}

a:not(.button):focus-visible {
  outline: 2px solid hsl(var(--primary));
  outline-offset: 2px;
  border-radius: 2px;
}

/* Am√©liorer le contraste du texte */
.text-muted-foreground {
  color: hsl(var(--muted-foreground) / 0.8);
}

/* Assurer un contraste suffisant pour les boutons */
.btn-primary {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  border: 2px solid transparent;
}

.btn-primary:hover {
  background-color: hsl(var(--primary) / 0.9);
}

.btn-primary:focus-visible {
  outline: 2px solid hsl(var(--primary));
  outline-offset: 2px;
}

/* Styles pour les √©l√©ments cach√©s visuellement mais accessibles */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.sr-only:focus {
  position: static;
  width: auto;
  height: auto;
  padding: inherit;
  margin: inherit;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

/* Am√©liorer la lisibilit√© des formulaires */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="number"],
textarea,
select {
  border: 2px solid hsl(var(--border));
  border-radius: 4px;
  padding: 8px 12px;
  font-size: 16px; /* √âvite le zoom sur mobile */
}

input:focus,
textarea:focus,
select:focus {
  border-color: hsl(var(--primary));
  outline: none;
  box-shadow: 0 0 0 2px hsl(var(--primary) / 0.2);
}

/* Labels des formulaires */
label {
  font-weight: 500;
  color: hsl(var(--foreground));
  margin-bottom: 4px;
  display: block;
}

/* Messages d'erreur */
.error-message {
  color: hsl(var(--destructive));
  font-size: 14px;
  margin-top: 4px;
  display: block;
}

/* Am√©liorer la lisibilit√© des tableaux */
table {
  border-collapse: collapse;
  width: 100%;
}

th,
td {
  border: 1px solid hsl(var(--border));
  padding: 8px 12px;
  text-align: left;
}

th {
  background-color: hsl(var(--muted));
  font-weight: 600;
}

/* Am√©liorer la navigation au clavier */
.skip-link {
  position: absolute;
  top: -40px;
  left: 6px;
  background: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  padding: 8px;
  text-decoration: none;
  border-radius: 4px;
  z-index: 1000;
}

.skip-link:focus {
  top: 6px;
}

/* Am√©liorer les contrastes pour le mode sombre */
@media (prefers-color-scheme: dark) {
  .text-muted-foreground {
    color: hsl(var(--muted-foreground) / 0.9);
  }
  
  a:not(.button) {
    color: hsl(var(--primary) / 0.9);
  }
  
  a:not(.button):hover {
    color: hsl(var(--primary));
  }
}

/* R√©duire les animations pour les utilisateurs sensibles */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Am√©liorer la lisibilit√© pour les utilisateurs avec des difficult√©s de lecture */
.reading-mode {
  font-size: 18px;
  line-height: 1.6;
  letter-spacing: 0.5px;
}

/* Styles pour les alertes et notifications */
.alert {
  border: 2px solid;
  border-radius: 8px;
  padding: 16px;
  margin: 16px 0;
}

.alert-error {
  border-color: hsl(var(--destructive));
  background-color: hsl(var(--destructive) / 0.1);
  color: hsl(var(--destructive));
}

.alert-success {
  border-color: hsl(var(--primary));
  background-color: hsl(var(--primary) / 0.1);
  color: hsl(var(--primary));
}

.alert-warning {
  border-color: hsl(var(--warning));
  background-color: hsl(var(--warning) / 0.1);
  color: hsl(var(--warning));
}

/* Am√©liorer la visibilit√© des √©l√©ments interactifs */
button:disabled,
input:disabled,
textarea:disabled,
select:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* Assurer que les √©l√©ments interactifs ont une taille minimale */
button,
input[type="button"],
input[type="submit"],
input[type="reset"],
a.button {
  min-height: 44px;
  min-width: 44px;
}
```

### 5. `src/components/ui/AccessibilityProvider.tsx` - CR√âER UN PROVIDER D'ACCESSIBILIT√â

```typescript
import React, { createContext, useContext, useEffect, useState } from 'react';

interface AccessibilityContextType {
  isReducedMotion: boolean;
  isHighContrast: boolean;
  fontSize: 'small' | 'medium' | 'large';
  setFontSize: (size: 'small' | 'medium' | 'large') => void;
  announceToScreenReader: (message: string) => void;
}

const AccessibilityContext = createContext<AccessibilityContextType | undefined>(undefined);

export const useAccessibility = () => {
  const context = useContext(AccessibilityContext);
  if (!context) {
    throw new Error('useAccessibility must be used within an AccessibilityProvider');
  }
  return context;
};

interface AccessibilityProviderProps {
  children: React.ReactNode;
}

export const AccessibilityProvider: React.FC<AccessibilityProviderProps> = ({ children }) => {
  const [isReducedMotion, setIsReducedMotion] = useState(false);
  const [isHighContrast, setIsHighContrast] = useState(false);
  const [fontSize, setFontSize] = useState<'small' | 'medium' | 'large'>('medium');

  useEffect(() => {
    // D√©tecter les pr√©f√©rences utilisateur
    const mediaQueryMotion = window.matchMedia('(prefers-reduced-motion: reduce)');
    const mediaQueryContrast = window.matchMedia('(prefers-contrast: high)');

    setIsReducedMotion(mediaQueryMotion.matches);
    setIsHighContrast(mediaQueryContrast.matches);

    // √âcouter les changements
    const handleMotionChange = (e: MediaQueryListEvent) => setIsReducedMotion(e.matches);
    const handleContrastChange = (e: MediaQueryListEvent) => setIsHighContrast(e.matches);

    mediaQueryMotion.addEventListener('change', handleMotionChange);
    mediaQueryContrast.addEventListener('change', handleContrastChange);

    return () => {
      mediaQueryMotion.removeEventListener('change', handleMotionChange);
      mediaQueryContrast.removeEventListener('change', handleContrastChange);
    };
  }, []);

  const announceToScreenReader = (message: string) => {
    const announcement = document.createElement('div');
    announcement.setAttribute('aria-live', 'polite');
    announcement.setAttribute('aria-atomic', 'true');
    announcement.className = 'sr-only';
    announcement.textContent = message;
    
    document.body.appendChild(announcement);
    
    setTimeout(() => {
      document.body.removeChild(announcement);
    }, 1000);
  };

  const value: AccessibilityContextType = {
    isReducedMotion,
    isHighContrast,
    fontSize,
    setFontSize,
    announceToScreenReader
  };

  return (
    <AccessibilityContext.Provider value={value}>
      <div 
        className={`accessibility-wrapper ${
          isReducedMotion ? 'reduced-motion' : ''
        } ${
          isHighContrast ? 'high-contrast' : ''
        } ${
          fontSize === 'large' ? 'large-text' : fontSize === 'small' ? 'small-text' : ''
        }`}
      >
        {children}
      </div>
    </AccessibilityContext.Provider>
  );
};
```

## üöÄ Application du Patch

```bash
# 1. Sauvegarder les fichiers existants
cp src/pages/Landing.tsx src/pages/Landing.tsx.backup
cp src/components/products/ProductCard.tsx src/components/products/ProductCard.tsx.backup

# 2. Cr√©er les nouveaux fichiers
touch src/components/ui/AccessibilityProvider.tsx

# 3. Appliquer les modifications
# (Les fichiers sont d√©j√† corrig√©s dans le patch)

# 4. Int√©grer le provider dans App.tsx
# Ajouter <AccessibilityProvider> autour du contenu principal

# 5. Tester l'accessibilit√©
npm run build
npm run preview
```

## ‚úÖ V√©rification

Apr√®s application du patch :
- [ ] Toutes les images ont des alt texts descriptifs
- [ ] Les liens ont des labels accessibles
- [ ] Les boutons ont des aria-labels appropri√©s
- [ ] Le focus est visible sur tous les √©l√©ments interactifs
- [ ] Les formulaires ont des labels associ√©s
- [ ] Le contraste des couleurs respecte WCAG AA
- [ ] La navigation au clavier fonctionne correctement
- [ ] Les skip links sont pr√©sents
- [ ] Les annonces screen reader fonctionnent

## üìä Impact

- **Temps de correction :** 2 heures
- **Complexit√© :** √âlev√©e
- **Risque :** Faible (am√©liorations non-r√©gressives)
- **Impact :** Conformit√© WCAG 2.1 AA, accessibilit√© pour tous les utilisateurs
- **Utilisateurs b√©n√©ficiaires :** Utilisateurs avec handicaps visuels, moteurs, cognitifs
- **Score d'accessibilit√© attendu :** 95+ (actuellement ~60)
