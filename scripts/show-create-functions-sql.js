// Script pour cr√©er les fonctions manquantes dans Supabase
// Ce script affiche le SQL √† ex√©cuter dans l'interface Supabase

console.log('üöÄ Script de cr√©ation des fonctions Supabase manquantes\n');

console.log('üìã Instructions:');
console.log('1. Ouvrez votre projet Supabase: https://supabase.com/dashboard/project/hbdnzajbyjakdhuavrvb');
console.log('2. Allez dans SQL Editor');
console.log('3. Copiez et ex√©cutez le SQL ci-dessous\n');

console.log('='.repeat(80));
console.log('SQL √Ä EX√âCUTER DANS SUPABASE:');
console.log('='.repeat(80));

const sql = `
-- Cr√©er une s√©quence pour les num√©ros de commande si elle n'existe pas
CREATE SEQUENCE IF NOT EXISTS order_number_seq START 1;

-- Fonction pour g√©n√©rer un num√©ro de commande unique
CREATE OR REPLACE FUNCTION generate_order_number()
RETURNS TEXT AS $$
DECLARE
    order_num TEXT;
BEGIN
    -- G√©n√©rer un num√©ro au format: ORD-YYYYMMDD-XXXX
    order_num := 'ORD-' || TO_CHAR(NOW(), 'YYYYMMDD') || '-' || LPAD(NEXTVAL('order_number_seq')::TEXT, 4, '0');
    RETURN order_num;
END;
$$ LANGUAGE plpgsql;

-- Fonction pour g√©n√©rer un code de parrainage unique
CREATE OR REPLACE FUNCTION generate_referral_code()
RETURNS TEXT AS $$
DECLARE
    referral_code TEXT;
    code_exists BOOLEAN;
BEGIN
    LOOP
        -- G√©n√©rer un code de 8 caract√®res alphanum√©riques en majuscules
        referral_code := UPPER(SUBSTRING(MD5(RANDOM()::TEXT), 1, 8));
        
        -- V√©rifier si le code existe d√©j√† dans la table profiles
        SELECT EXISTS(
            SELECT 1 FROM profiles 
            WHERE referral_code = generate_referral_code.referral_code
        ) INTO code_exists;
        
        -- Si le code n'existe pas, on peut l'utiliser
        EXIT WHEN NOT code_exists;
    END LOOP;
    
    RETURN referral_code;
END;
$$ LANGUAGE plpgsql;

-- Ajouter des commentaires pour la documentation
COMMENT ON FUNCTION generate_order_number() IS 'G√©n√®re un num√©ro de commande unique au format ORD-YYYYMMDD-XXXX';
COMMENT ON FUNCTION generate_referral_code() IS 'G√©n√®re un code de parrainage unique de 8 caract√®res alphanum√©riques';

-- Test des fonctions (optionnel)
SELECT generate_order_number() as test_order_number;
SELECT generate_referral_code() as test_referral_code;
`;

console.log(sql);

console.log('='.repeat(80));
console.log('üìù Explication des fonctions:');
console.log('='.repeat(80));

console.log(`
üî¢ generate_order_number():
   - G√©n√®re un num√©ro de commande unique
   - Format: ORD-YYYYMMDD-XXXX (ex: ORD-20250110-0001)
   - Utilise une s√©quence pour garantir l'unicit√©

üéØ generate_referral_code():
   - G√©n√®re un code de parrainage unique de 8 caract√®res
   - Format: 8 caract√®res alphanum√©riques en majuscules (ex: A1B2C3D4)
   - V√©rifie l'unicit√© dans la table profiles
   - G√©n√®re un nouveau code si collision d√©tect√©e

üìã Apr√®s ex√©cution:
   1. Les fonctions seront disponibles dans votre base de donn√©es
   2. Vous pourrez les utiliser dans vos requ√™tes SQL
   3. Elles seront automatiquement d√©tect√©es par le script de v√©rification
`);

console.log('\nüéâ Une fois le SQL ex√©cut√©, relancez le script de v√©rification pour confirmer !');
